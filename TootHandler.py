"""Macstodon - a Mastodon client for classic Mac OSMIT LicenseCopyright (c) 2022 Scott Small and ContributorsPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associateddocumentation files (the "Software"), to deal in the Software without restriction, including without limitation therights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permitpersons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of theSoftware.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THEWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS ORCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OROTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."""# ############### Python Imports # ##############import EasyDialogsimport W# ########### My Imports# ##########from constants import VERSIONfrom mdhelpers import dprint, handleRequest# ############ Application# ###########class TootHandler:    def __init__(self, app):        """        """        self.app = app    def getTootWindow(self):        tootwindow = W.Dialog((220, 100), "Macstodon %s - Toot" % VERSION)        tootwindow.toot = W.EditText((10, 6, -10, 50))        tootwindow.logout_btn = W.Button((10, -22, 60, 16), "Close", tootwindow.close)        tootwindow.toot_btn = W.Button((-69, -22, 60, 16), "Toot!", self.tootCallback)        tootwindow.setdefaultbutton(tootwindow.toot_btn)        return tootwindow    # ##################    # Callback Functions    # ##################    def tootCallback(self):        """        Called when the user presses the Toot button, and posts their toot.        """        req_data = {            "status": self.app.tootwindow.toot.get()        }        path = "/api/v1/statuses"        data = handleRequest(self.app, path, req_data, use_token=1)        if not data:            # handleRequest failed and should have popped an error dialog            return        if data.get("error_description") is not None:            EasyDialogs.Message("Server error when posting toot:\r\r %s" % data['error_description'])        elif data.get("error") is not None:            EasyDialogs.Message("Server error when posting toot:\r\r %s" % data['error'])        else:            EasyDialogs.Message("Tooted successfully!")